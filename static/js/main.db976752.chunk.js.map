{"version":3,"sources":["components/molecules/Nav.js","components/molecules/Banner.js","components/molecules/ButtonFilter.js","components/molecules/CardChampion.js","components/molecules/FormChampion.js","components/pages/AllChampions.js","components/molecules/ChampionAttributes.js","components/molecules/ChampionInfo.js","components/molecules/ChampionSpells.js","components/pages/Champion.js","components/Router/RouterApp.js","index.js"],"names":["Nav","logo","title","className","to","src","alt","Banner","title1","title2","subtitle","ButtonFilter","handleChangeTags","name","tagNameList","champions","onClick","e","CardChampion","id","tags","imgData","style","backgroundImage","map","tag","backgroundColor","FormChampion","useState","search","setSearch","championInput","setchampionInput","onSubmit","preventDefault","console","log","find","champion","toLocaleLowerCase","undefined","type","placeholder","autoComplete","value","onChange","target","AllChampions","loading","championsState","setChampions","championTagNameList","championWithTags","championWithTagsState","setChampionWithTags","useEffect","window","scrollTo","top","getData","newList","filter","includes","a","fetch","respChampion","json","data","dataList","Object","values","length","ChampionAttributes","info","attack","defense","magic","difficulty","ChampionInfo","ChampionSpells","passive","spells","description","championSpell","setChampionSpell","handleChangeSpell","idChampion","currentTarget","championSpellData","image","full","dangerouslySetInnerHTML","__html","active","Champion","setChampion","setLoading","paramIdChampion","useParams","getChampionData","resp","valueOf","lore","RouterApp","basename","exact","path","component","root","document","getElementById","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.db976752.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Nav = ({logo, title}) => {\r\n    return (\r\n        <nav className='flex items-center justify-center md:justify-start px-2 bg-gray-900 text-white font-poppins sticky top-0'>\r\n\r\n            <Link to='/' className='flex items-center'>\r\n                <img \r\n                src={ logo }\r\n                alt={ title }\r\n                className='h-12'\r\n                />\r\n                <p className='font-medium uppercase hover:text-gray-300'>{ title }</p>\r\n            </Link>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\n\r\nconst Banner = ({title1, title2, subtitle}) => (\r\n\r\n    <div className='text-center font-poppins mb-12'>\r\n        <p className='text-2xl font-medium text-gray-800 uppercase mb-2'>{ title1 }</p>\r\n        <p className='text-5xl font-semibold uppercase text-gray-900 mb-5'>{ title2 } </p>\r\n        <p className='text-gray-800 text-sm'> { subtitle } </p>\r\n    </div>\r\n\r\n)\r\n\r\nexport default Banner\r\n","import React from 'react'\r\n\r\nconst ButtonFilter = ({handleChangeTags, tagNameList, champions, name}) => {\r\n\r\n    return(\r\n        <button \r\n        onClick={(e,tagNameList, champions) => handleChangeTags(e, tagNameList, champions) }\r\n        className='focus:outline-none hover:text-gray-300 p-3 mx-2 uppercase text-white font-poppins font-medium text-base'\r\n        name={name}>\r\n            \r\n        { name === 'Tank Mage Figther Assassin Support Marksman' ?'Alls': name }\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonFilter\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction CardChampion({id, name, title, tags}) {\r\n\r\n    const imgData = `https://ddragon.leagueoflegends.com/cdn/11.5.1/img/champion/${id}.png`\r\n    return (\r\n    <div className='flex  flex-col champion px-2 w-36 mb-3 '>\r\n        <Link \r\n        to={`/${id}`}\r\n        className='hover:opacity-80 duration-300 flex flex-col justify-end items-end w-20 h-20 md:w-24 md:h-24 bg-center bg-cover bg-no-repeat mb-1' \r\n        style={{ backgroundImage: `url('${imgData}')` }}\r\n        >\r\n            { tags.map( tag =><p key={tag} style={{backgroundColor:`#00000096`}} className='mb-0.5 text-white text-xs bg-gray-700 px-1 py-0.5'>{tag}</p> )}\r\n\r\n        </Link>\r\n        <p className='text-gray-800 font-poppins font-medium text-sm'>{name}</p>\r\n        <p className='break-words text-gray-600 font-poppins font-medium text-xs'>{title}</p>\r\n    </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CardChampion\r\n","import React, { Fragment, useState } from 'react'\r\nimport CardChampion from './CardChampion'\r\n\r\nconst FormChampion = ({champions}) => {\r\n\r\n    // Estado de buscador\r\n    const [search, setSearch] = useState('')\r\n    const [championInput, setchampionInput] = useState('')\r\n\r\n\r\n    // Busca campeones\r\n    const handleSearchChampion = (e) => {\r\n        e.preventDefault();\r\n        console.log(search)\r\n        const championInput = champions.find( champion => champion.name.toLocaleLowerCase() === search.toLocaleLowerCase())\r\n        championInput !== undefined ? setchampionInput( championInput ) : setchampionInput('El campeon no existe')\r\n        setSearch('')\r\n\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n        <form onSubmit={ handleSearchChampion } className='flex flex-col'>\r\n\r\n            <div className='flex flex-col items-center'>\r\n                <div className='flex justify-center items-center px-2 h-36 mb-3'>\r\n                    {\r\n                    championInput === '' || championInput === 'El campeon no existe'?\r\n                    <p className='mt-auto text-center font-poppins text-gray-700 mb-2'>{ championInput }</p>\r\n                    : \r\n                    <CardChampion\r\n                    id={championInput.id} \r\n                    name={championInput.name}  \r\n                    title={championInput.title} tags={championInput.tags}/>\r\n                    }\r\n                </div>\r\n\r\n                <input \r\n                type='text' \r\n                placeholder='Search...' \r\n                className='text-center focus:outline-none border-2 border-gray-700 mb-1 p-3' \r\n                autoComplete='false'\r\n                value={ search }\r\n                onChange={ (e)=> setSearch(e.target.value) }\r\n                />\r\n            </div>\r\n\r\n                <input \r\n                type='submit' \r\n                value='Search' \r\n                className='focus:outline-none cursor-pointer uppercase p-2  border-2 border-red-800 text-white  font-poppins font-medium bg-red-800 mb-5' />\r\n        </form>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default FormChampion\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport Banner from '../molecules/Banner'\r\nimport ButtonFilter from '../molecules/ButtonFilter'\r\nimport CardChampion from '../molecules/CardChampion'\r\nimport FormChampion from '../molecules/FormChampion'\r\n\r\nconst AllChampions = () => {\r\n\r\n    // Lista de todos los campeones\r\n    const [championsState, setChampions] = useState( { champions: [], loading: true,})\r\n    const { champions, loading } = championsState\r\n\r\n    const [championTagNameList] = useState(\r\n        ['Tank Mage Figther Assassin Support Marksman','Tank', 'Fighter', 'Assassin', 'Mage', 'Marksman', 'Support']\r\n    )\r\n\r\n\r\n\r\n    // Lista de campeones filtrados\r\n    const [championWithTagsState , setChampionWithTags ] = useState({ championWithTags: [], tagNameList:''} )\r\n    const {championWithTags, tagNameList } = championWithTagsState\r\n\r\n\r\n    // Efecto al llamar componente\r\n    useEffect(() => {\r\n        \r\n        window.scrollTo({top:0})\r\n        getData();\r\n    }, [])\r\n\r\n\r\n    // Recibe el Tags para filtrar la lista de campeones, si el tags ya está disponible no hace falta tilrar.\r\n    const handleChangeTags = (e) => {\r\n        const tag = e.target.name\r\n\r\n        if( tagNameList !== tag ) {\r\n            \r\n            const newList = champions.filter(({tags})=> tags.includes(tag) )\r\n            setChampionWithTags({championWithTags: newList, tagNameList:tag})\r\n        }\r\n        \r\n    }\r\n\r\n    // Recibir todos los campeones | Colocarlos en una lista | Actualizar State\r\n    const getData = async() => {\r\n        const respChampion = await fetch('https://ddragon.leagueoflegends.com/cdn/11.5.1/data/en_US/champion.json')\r\n        const { data } = await respChampion.json()\r\n        const dataList = Object.values( data )\r\n        setChampions({champions:dataList, loading: false})\r\n    }\r\n\r\n\r\n    return (\r\n\r\n            <section className='container px-5 md:px-10 mx-auto mt-10 mb-10'>\r\n\r\n                {/* Banner Principal */}\r\n                <Banner\r\n                title1 = 'CHOOSE YOUR'\r\n                title2 = 'CHAMPION'\r\n                subtitle= 'With more than 140 champions, you’ll find the perfect match for your playstyle. Master one, or master them all.'\r\n                />\r\n\r\n                {\r\n                    !loading\r\n                    ?(  \r\n                        <Fragment>\r\n                            <div className='flex flex-col items-center justify-center flex-wrap mb-5'>\r\n\r\n                                {/* Buscador */}\r\n                                <FormChampion \r\n                                champions={ champions } \r\n                                />\r\n\r\n\r\n                                {/* Filtro de campeones */}\r\n                                <div className='bg-gray-800'>\r\n                                    {\r\n                                        championTagNameList.map( tag =>\r\n                                            <ButtonFilter\r\n                                            key={ tag }\r\n                                            handleChangeTags={ handleChangeTags }\r\n                                            tagNameList={ tagNameList }\r\n                                            champions = { champions}\r\n                                            name={ tag }\r\n                                            />\r\n                                        )\r\n                                    }\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Listar campeones */}\r\n                            <div className='flex flex-wrap justify-center'>\r\n                            {\r\n                                championWithTags.length > 0\r\n                                ?\r\n                                championWithTags.map( ({id, name, title, tags}) => <CardChampion key={id}  id={id} name={name} title={title} tags={tags} /> )\r\n                                :\r\n                                champions.map( ({id, name, title, tags}) => <CardChampion key={id}  id={id} name={name} title={title} tags={tags} /> )\r\n                            }\r\n                            </div>\r\n                        </Fragment>\r\n                    )\r\n                    :(\r\n                        <p className='bg-gray-800 p-4 text-white text-center font-medium font-poppins uppercase'>LOADING ...</p>\r\n                    )\r\n                }\r\n\r\n            </section>\r\n    )\r\n}\r\n\r\nexport default AllChampions\r\n","import React from 'react'\r\n\r\nconst ChampionAttributes = ({id, tags, info}) => (\r\n\r\n    <div className='flex mb-5'>\r\n        <div \r\n        style={{ backgroundImage: `url(${`https://ddragon.leagueoflegends.com/cdn/11.5.1/img/champion/${`${id}`}.png`})`}}\r\n        className='flex flex-col  items-end justify-end mr-3 h-20 w-20 bg-no-repeat bg-cover bg-center'>\r\n\r\n            {\r\n                tags.map( tag => \r\n                        <p key={tag} style={{ backgroundColor: `${'#00000096'}` }}className='text-xs text-white px-1 py-0.5'>{tag}</p>\r\n                )\r\n            }\r\n\r\n        </div>\r\n\r\n        <div>\r\n            <p className='mt-auto text-white text-sm font-medium font-poppins'>ATTACK: <span className='text-gray-300'>{info.attack}</span></p>\r\n            <p className='mt-auto text-white text-sm font-medium font-poppins'>DEFENSE: <span className='text-gray-300'>{info.defense}</span></p>\r\n            <p className='mt-auto text-white text-sm font-medium font-poppins'>MAGIC: <span className='text-gray-300'>{info.magic}</span></p>\r\n            <p className='mt-auto text-white text-sm font-medium font-poppins'>DIFFICULTY: <span className='text-gray-300'>{info.difficulty}</span></p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ChampionAttributes\r\n","import React, { Fragment } from 'react'\r\n\r\nconst ChampionInfo = ({name, title}) => (\r\n\r\n    <Fragment>\r\n        <p className='text-white text-4xl uppercase font-semibold font-poppins'>{name}</p>\r\n        <p className='text-gray-400 text-2xl uppercase font-medium font-poppins mb-6'>{title}</p>\r\n    </Fragment>\r\n)\r\nexport default ChampionInfo\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nconst ChampionSpells = ({passive, spells, id}) => {\r\n\r\n    const [championSpell, setChampionSpell] = useState({ name: '', description:''})\r\n\r\n    // const passiveDescription = { _html}\r\n\r\n    const handleChangeSpell = (e) => {\r\n        \r\n        const idChampion = e.currentTarget.name\r\n        const championSpellData = spells.find(({id})=> id === idChampion )\r\n        setChampionSpell( championSpellData )\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setChampionSpell(spells[0])\r\n    }, [spells])\r\n\r\n    return(\r\n        <div className='flex flex-col mb-4'>\r\n\r\n            {/* Pasive */}\r\n            <div className='flex Pasive'>\r\n                {/* <div style={{ backgroundImage: `url(${`http://ddragon.leagueoflegends.com/cdn/11.6.1/img/passive/${`${passive.image.full}`}`})`}} className='mr-5 w-10 h-10 bg-no-repeat bg-cover bg-center mb-3'></div> */}\r\n                <img \r\n                src={`https://ddragon.leagueoflegends.com/cdn/11.6.1/img/passive/${passive.image.full}`}\r\n                alt={passive.name}\r\n                className='mr-4 w-20 h-20 object-cover'/>\r\n                <div>\r\n                    <p className='font-semibold font-poppins text-sm text-white uppercase mb-1'>{passive.name}</p>\r\n                    <p dangerouslySetInnerHTML={{__html:passive.description}}className='font-base font-poppins text-sm text-gray-300 mb-8'></p>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* Spells */}\r\n            <div className='flex flex-col'>\r\n                <div className='mb-5'>\r\n                    {\r\n                        spells.map(({id, name, description, active })=>\r\n\r\n                            <button key={id}\r\n                            onClick={ handleChangeSpell }\r\n                            style={{ backgroundImage: `url(${`http://ddragon.leagueoflegends.com/cdn/11.6.1/img/spell/${`${id}`}.png`})`}} className='mr-5 w-10 h-10 bg-cover bg-center'\r\n                            name={id}>\r\n                            </button>\r\n\r\n                        )\r\n                    }\r\n\r\n                </div>\r\n                <p className='font-semibold font-poppins text-sm text-white uppercase mb-1'>{championSpell.name}</p>\r\n                <p dangerouslySetInnerHTML={{__html:championSpell.description}} className='font-base font-poppins text-sm text-gray-300 mb-12'></p>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChampionSpells","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router'\r\nimport ChampionAttributes from '../molecules/ChampionAttributes'\r\nimport ChampionInfo from '../molecules/ChampionInfo'\r\nimport ChampionSpells from '../molecules/ChampionSpells'\r\n\r\nconst Champion = () => {\r\n\r\n    const [champion, setChampion] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const paramIdChampion = useParams()\r\n\r\n\r\n    const getChampionData = async(paramIdChampion ) => {\r\n        const resp = await fetch(`https://ddragon.leagueoflegends.com/cdn/11.6.1/data/en_US/champion/${paramIdChampion.champion}.json`)\r\n        const { data } = await resp.json()\r\n        setChampion(data.valueOf()[`${paramIdChampion.champion}`])\r\n        setLoading(false)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        window.scrollTo({top:0})\r\n        getChampionData(paramIdChampion );\r\n    }, [paramIdChampion ])\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {\r\n                loading ?\r\n                (\r\n                    <div className='h-screen flex items-center justify-center'>\r\n                        <p className='font-poppins font-semibold text-base uppercase'>LOADING</p>\r\n                    </div>\r\n                )\r\n                :\r\n                (\r\n\r\n                    <div \r\n                    style={{backgroundImage: `url(${`https://ddragon.leagueoflegends.com/cdn/img/champion/splash/${`${champion.id}`}_0.jpg`})`}} \r\n                    className='min-h-screen bg-cover'>\r\n                        <div className='grid md:grid-cols-2  bg-gradient-to-r from-black via-transparent to-black min-h-screen'>\r\n                            <div className='pt-10  px-5 md:px-10 container mx-auto'>\r\n            \r\n                                {/* Nombre y titulo */}\r\n                                <ChampionInfo name={ champion.name} title={ champion.title } />\r\n                                \r\n                                \r\n                                {/* Atributos */}\r\n                                <ChampionAttributes\r\n                                id = {champion.id}\r\n                                tags = { champion.tags}\r\n                                info = { champion.info }\r\n                                />\r\n            \r\n                                {/* Habilidades */}\r\n                                <ChampionSpells id={champion.id} passive={ champion.passive } spells={ champion.spells } />\r\n\r\n                                {/* Lore */}\r\n                                <p className='font-semibold font-poppins text-sm text-white uppercase mb-1'>LORE</p>\r\n                                <p dangerouslySetInnerHTML={{__html:champion.lore}} className='text-gray-300 text-sm font-base font-poppins mb-10'></p>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Champion\r\n","import React  from 'react'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n// Molecules\r\nimport Nav from '../molecules/Nav';\r\nimport AllChampions from '../pages/AllChampions';\r\nimport Champion from '../pages/Champion';\r\n\r\n\r\n\r\nconst RouterApp = () => {\r\n    return (\r\n        <Router basename='lol'>\r\n            <div style={{ backgroundColor: '#f3f3f34f'}}>\r\n\r\n                <Nav \r\n                logo='https://static.developer.riotgames.com/img/logo.png'\r\n                title='LEAGUE OF LEGENDS'\r\n                />\r\n\r\n                <Switch>\r\n                    <Route exact path='/' component={ AllChampions }></Route>\r\n                    <Route exact path='/:champion' component={ Champion }></Route>\r\n\r\n                    <Redirect to='/' />\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nexport default RouterApp\r\n","// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Estilos\nimport './assets/css/index.css';\nimport RouterApp from './components/Router/RouterApp';\n\n// Routes\n\n\nconst root = document.getElementById('root')\nconst element = <RouterApp />\n\n\nReactDOM.render(element, root);\n"],"sourceRoot":""}